{"version":3,"sources":["components/Reviews/Reviews.module.css","components/Reviews/Reviews.js"],"names":["module","exports","Reviews","movieId","useState","reviewsList","setReviewList","page","setPage","totalPages","setTotalPages","useEffect","api","then","data","console","log","result","length","total_pages","toast","error","className","styles","reviewList","map","review","reviewItem","imageBox","avatar","src","path","author_details","avatar_path","incledes","slice","indexOf","alt","author","reviewsBox","name","movieItem","updated_at","content","id","Pagination","count","onChange","evt","value","boundaryCount","color"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,WAAa,4BAA4B,WAAa,4BAA4B,SAAW,0BAA0B,WAAa,4BAA4B,QAAU,2B,kJC8E7KC,EAxEC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,EAAqCC,mBAAS,MAA9C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACNC,IAAeT,EAASI,GAAMM,MAAK,SAAAC,GAC/BC,QAAQC,IAAIF,GACPA,EAAKG,OAAOC,QAIjBZ,EAAcQ,EAAKG,QACnBP,EAAcI,EAAKK,cAJfC,IAAMC,MAAM,iCAMrB,CAAClB,EAASI,IAgBZ,OACD,qCACGF,GACC,oBAAIiB,UAAWC,IAAOC,WAAtB,SACGnB,EAAYoB,KAAI,SAAAC,GAAM,OACrB,qBAAoBJ,UAAWC,IAAOI,WAAtC,UACE,qBAAKL,UAAWC,IAAOK,SAAvB,SACE,qBACEN,UAAWC,IAAOM,OAClBC,KAvBIC,EAuBWL,EAAOM,eAAeC,YAtB1CF,EAGDA,EAAKG,SAAS,QACPH,EAAKI,MAAMJ,EAAKK,QAAQ,MAE7B,mCAAN,OAA0CL,GAL/B,+FAsBDM,IAAKX,EAAOY,WAGhB,sBAAKhB,UAAWC,IAAOgB,WAAvB,UACE,oBAAIjB,UAAWC,IAAOiB,KAAtB,SAA6Bd,EAAOY,SACpC,mBAAGhB,UAAWC,IAAOkB,UAArB,SACGf,EAAOgB,WAAWP,MAAM,EAAGT,EAAOgB,WAAWN,QAAQ,QAExD,mBAAGd,UAAWC,IAAOoB,QAArB,SAA+BjB,EAAOiB,eAbjCjB,EAAOkB,IAnBN,IAAAb,OAsCftB,EAAa,GACZ,cAACoC,EAAA,EAAD,CACEC,MAAOrC,EACPF,KAAMA,EACNwC,SAhCe,SAACC,EAAKC,GACvBzC,EAAQyC,IAgCNC,cAAe,EACfC,MAAM","file":"static/js/reviews-subview.dfa18e67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviewList\":\"Reviews_reviewList__EZbDg\",\"reviewItem\":\"Reviews_reviewItem__1EYFT\",\"imageBox\":\"Reviews_imageBox__24wqz\",\"reviewsBox\":\"Reviews_reviewsBox__1Vovx\",\"content\":\"Reviews_content__76bwz\"};","import { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport PropTypes from 'prop-types';\r\nimport * as api from '../../services/serviceApi';\r\nimport styles from './Reviews.module.css';\r\n\r\nconst Reviews = ({ movieId }) => {\r\n    const [reviewsList, setReviewList] = useState(null);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n\r\n    useEffect(() => {\r\n        api.getReviews(movieId, page).then(data => {\r\n            console.log(data);\r\n            if (!data.result.length) {\r\n                toast.error('No revies for this movie');\r\n                return;\r\n            }\r\n            setReviewList(data.result);\r\n            setTotalPages(data.total_pages);\r\n        });\r\n    }, [movieId, page]);\r\n\r\n    const getAvatar = path => {\r\n        if (!path) {\r\n            return 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Noimage.svg/555px-Noimage.svg.png';\r\n        }\r\n        if (path.incledes('http')) {\r\n            return path.slice(path.indexOf('h'));\r\n        }\r\n        return `https://image.tmdb.org/t/p/w500/${path}`;\r\n    };\r\n\r\n    const handleChange = (evt, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n     return (\r\n    <>\r\n      {reviewsList && (\r\n        <ul className={styles.reviewList}>\r\n          {reviewsList.map(review => (\r\n            <li key={review.id} className={styles.reviewItem}>\r\n              <div className={styles.imageBox}>\r\n                <img\r\n                  className={styles.avatar}\r\n                  src={getAvatar(review.author_details.avatar_path)}\r\n                  alt={review.author}\r\n                ></img>\r\n              </div>\r\n              <div className={styles.reviewsBox}>\r\n                <h2 className={styles.name}>{review.author}</h2>\r\n                <p className={styles.movieItem}>\r\n                  {review.updated_at.slice(0, review.updated_at.indexOf('T'))}\r\n                </p>\r\n                <p className={styles.content}>{review.content}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {totalPages > 1 && (\r\n        <Pagination\r\n          count={totalPages}\r\n          page={page}\r\n          onChange={handleChange}\r\n          boundaryCount={2}\r\n          color=\"secondary\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nReviews.propTypes = {\r\n  movieId: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/SearchBar/SearchBar.module.css","components/SearchBar/SearchBar.js","views/MoviesView.js"],"names":["module","exports","SearchBar","onClick","useState","searchQuery","setSearchQuery","className","styles","searchBar","onSubmit","e","preventDefault","toast","error","input","type","autoComplete","placeholder","value","onChange","target","button","Movies","movies","setMovies","request","setRequest","page","setPage","totalPages","setTotalPages","useEffect","api","then","data","results","length","total_pages","MoviesList","Pagination","count","boundaryCount","color"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,OAAS,4B,kGC6CtFC,EAzCG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAiBA,OACI,uBAAMC,UAAWC,IAAOC,UAAWC,SAZnB,SAAAC,GAChBA,EAAEC,iBAEkB,KAAhBP,EAKJF,EAAQE,GAJJQ,IAAMC,MAAM,8CAQhB,UACI,gCACI,uBACIP,UAAWC,IAAOO,MAClBC,KAAK,OACLC,aAAa,MACbC,YAAY,eACZC,MAAOd,EACPe,SAxBI,SAAAT,GAChBL,EAAeK,EAAEU,OAAOF,YA0BpB,wBAAQZ,UAAWC,IAAOc,OAAQN,KAAK,SAAvC,wB,gBCoBGO,UAhDA,WACb,MAA4BnB,mBAAS,MAArC,mBAAOoB,EAAP,KAAeC,EAAf,KACA,EAA8BrB,mBAAS,IAAvC,mBAAOsB,EAAP,KAAgBC,EAAhB,KACA,EAAwBvB,mBAAS,GAAjC,mBAAOwB,EAAP,KAAaC,EAAb,KACA,EAAoCzB,mBAAS,GAA7C,mBAAO0B,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACHN,GAILO,IAAiBP,EAASE,GAAMM,MAAK,SAAAC,GAC9BA,EAAKC,QAAQC,QAIlBZ,EAAUU,EAAKC,SACfL,EAAcI,EAAKG,cAJjBzB,IAAMC,MAAM,sCAMf,CAACY,EAASE,IAWb,OACE,qCACE,cAAC,EAAD,CAAWzB,QAXC,SAAAuB,GACdC,EAAWD,GACXG,EAAQ,MAULL,GAAU,cAACe,EAAA,EAAD,CAAYf,OAAQA,IAE9BM,EAAa,GACZ,cAACU,EAAA,EAAD,CACEC,MAAOX,EACPF,KAAMA,EACNR,SAba,SAACT,EAAGQ,GACvBU,EAAQV,IAaFuB,cAAe,EACfC,MAAM","file":"static/js/movies-view.e50399b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__1EDD5\",\"input\":\"SearchBar_input__3FkT-\",\"button\":\"SearchBar_button__FRKAm\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport styles from './SearchBar.module.css';\r\n\r\nconst SearchBar = ({ onClick }) => {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const handleInput = e => {\r\n        setSearchQuery(e.target.value);\r\n    }\r\n\r\n    const handleClick = e => {\r\n        e.preventDefault();\r\n\r\n        if (searchQuery === '') {\r\n            toast.error('Nothing to find. Check input field please');\r\n            return;\r\n        }\r\n\r\n        onClick(searchQuery);\r\n    };\r\n\r\n    return (\r\n        <form className={styles.searchBar} onSubmit={handleClick}>\r\n            <label>\r\n                <input\r\n                    className={styles.input}\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Search movie\"\r\n                    value={searchQuery}\r\n                    onChange={handleInput}\r\n                ></input>\r\n            </label>\r\n            <button className={styles.button} type=\"submit\">\r\n                Search\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;","import { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport SearchBar from '../components/SearchBar';\r\nimport MoviesList from '../components/MoviesList';\r\nimport * as api from '../services/serviceApi';\r\n\r\nconst Movies = () => {\r\n  const [movies, setMovies] = useState(null);\r\n  const [request, setRequest] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (!request) {\r\n      return;\r\n    }\r\n\r\n    api.searchMovies(request, page).then(data => {\r\n      if (!data.results.length) {\r\n        toast.error('Nothing was found. Try again.');\r\n        return;\r\n      }\r\n      setMovies(data.results);\r\n      setTotalPages(data.total_pages);\r\n    });\r\n  }, [request, page]);\r\n\r\n  const onClick = request => {\r\n    setRequest(request);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleChange = (e, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchBar onClick={onClick} />\r\n      {movies && <MoviesList movies={movies} />}\r\n\r\n      {totalPages > 1 && (\r\n        <Pagination\r\n          count={totalPages}\r\n          page={page}\r\n          onChange={handleChange}\r\n          boundaryCount={2}\r\n          color=\"secondary\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;"],"sourceRoot":""}